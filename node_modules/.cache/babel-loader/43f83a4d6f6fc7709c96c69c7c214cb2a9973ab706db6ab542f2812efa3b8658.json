{"ast":null,"code":"var _jsxFileName = \"/Users/Apple/FrontEnd/Udemy/ultimate-react-course/07-usepopcorn/src/Search.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const handleInput = e => {\n    setSearch(e.target.value);\n  };\n  const submit = e => {\n    e.preventDefault();\n    const url = `https://api.github.com/search/users?q=${search}`;\n    if (search && !searchResults.includes(search)) {\n      setSearchResults([...searchResults, search]);\n    } else {\n      alert('already in list');\n    }\n    setSearch(\"\"); // Clear the input field after submission\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search,\n        onChange: handleInput,\n        placeholder: \"Search for\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Search, \"tq/TV8WmRhztjqiaeDQdb3Nb12k=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_s","search","setSearch","searchResults","setSearchResults","handleInput","e","target","value","submit","preventDefault","url","includes","alert","children","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","item","i","_c","$RefreshReg$"],"sources":["/Users/Apple/FrontEnd/Udemy/ultimate-react-course/07-usepopcorn/src/Search.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport const Search = () => {\n    const [search, setSearch] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleInput = (e) => {\n        setSearch(e.target.value);\n    }\n\n    const submit = (e) => {\n        e.preventDefault();\n        const url = `https://api.github.com/search/users?q=${search}`;\n        if (search && !searchResults.includes(search)) {\n            setSearchResults([...searchResults, search]);\n        }\n        else{\n            alert('already in list')\n        }\n        setSearch(\"\"); // Clear the input field after submission\n    }\n\n    return (\n        <>\n            <form onSubmit={submit}>\n                <input \n                    type=\"text\" \n                    value={search} \n                    onChange={handleInput} \n                    placeholder=\"Search for\" \n                />\n                <button type=\"submit\">Submit</button>\n            </form>\n            <ul>\n                {searchResults.map((item, i) => (\n                    <li key={i}>{item}</li>\n                ))}\n            </ul>\n        </>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMW,WAAW,GAAIC,CAAC,IAAK;IACvBJ,SAAS,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,MAAM,GAAIH,CAAC,IAAK;IAClBA,CAAC,CAACI,cAAc,EAAE;IAClB,MAAMC,GAAG,GAAI,yCAAwCV,MAAO,EAAC;IAC7D,IAAIA,MAAM,IAAI,CAACE,aAAa,CAACS,QAAQ,CAACX,MAAM,CAAC,EAAE;MAC3CG,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEF,MAAM,CAAC,CAAC;IAChD,CAAC,MACG;MACAY,KAAK,CAAC,iBAAiB,CAAC;IAC5B;IACAX,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;EACnB,CAAC;;EAED,oBACIN,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA;MAAMmB,QAAQ,EAAEN,MAAO;MAAAK,QAAA,gBACnBlB,OAAA;QACIoB,IAAI,EAAC,MAAM;QACXR,KAAK,EAAEP,MAAO;QACdgB,QAAQ,EAAEZ,WAAY;QACtBa,WAAW,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1B,eACF1B,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClC,eACP1B,OAAA;MAAAkB,QAAA,EACKX,aAAa,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACvB7B,OAAA;QAAAkB,QAAA,EAAaU;MAAI,GAARC,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA,gBACN;AAEX,CAAC;AAAAtB,EAAA,CAtCYD,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}